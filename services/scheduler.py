import asyncio
from datetime import datetime
from aiogram import Bot
from services.weather_service import get_weather
from utils.state import user_notifications, user_cities, user_languages


async def send_daily_forecasts(bot: Bot):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑, –µ—Å–ª–∏ –Ω–∞—Å—Ç—É–ø–∏–ª–æ –∏—Ö –≤—Ä–µ–º—è"""
    now = datetime.now()
    current_hour = now.hour

    for user_id, notif in user_notifications.items():
        if not notif.get("enabled"):
            continue

        if notif.get("hour") == current_hour:
            city = user_cities.get(user_id)
            lang = user_languages.get(user_id, "ru")

            if not city:
                continue

            forecast_text = await get_weather(city, lang)

            if lang == "ru":
                message = (
                    f"üåÜ <b>{city}</b>\n\n"
                    f"‚òÄÔ∏è <b>–í–∞—à –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:</b>\n\n"
                    f"{forecast_text}"
                )
            else:
                message = (
                    f"üåÜ <b>{city}</b>\n\n"
                    f"‚òÄÔ∏è <b>Bugungi ob-havo ma‚Äôlumoti:</b>\n\n"
                    f"{forecast_text}"
                )

            try:
                await bot.send_message(
                    user_id,
                    message,
                    parse_mode="HTML"
                )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
